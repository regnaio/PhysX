#
# Build JNI Bindings
#

SET(JAVA_AWT_LIBRARY NotNeeded)
SET(JAVA_AWT_INCLUDE_PATH NotNeeded)
FIND_PACKAGE(JNI REQUIRED)

SET(PHYSX_SOURCE_DIR ${PHYSX_ROOT_DIR}/source)
SET(PHYSX_JNIBINDINGS_SOURCE_DIR ${PHYSX_SOURCE_DIR}/webidlbindings/src)

SET(PHYSX_JNIBINDINGS_LIBTYPE SHARED)
SET(PXJNIBINDINGS_LIBTYPE_DEFS
	PX_PHYSX_FOUNDATION_EXPORTS;PX_PHYSX_COMMON_EXPORTS;PX_PHYSX_COOKING_EXPORTS;PX_PHYSX_LOADER_EXPORTS;PX_PHYSX_CORE_EXPORTS
)

SET(PHYSX_JNIBINDINGS_COMPILE_DEFS
	# Common to all configurations
	${PHYSX_LINUX_COMPILE_DEFS};PX_JNIBINDINGS;${PXJNIBINDINGS_LIBTYPE_DEFS}

	$<$<CONFIG:debug>:${PHYSX_LINUX_DEBUG_COMPILE_DEFS};>
	$<$<CONFIG:checked>:${PHYSX_LINUX_CHECKED_COMPILE_DEFS};>
	$<$<CONFIG:profile>:${PHYSX_LINUX_PROFILE_COMPILE_DEFS};>
	$<$<CONFIG:release>:${PHYSX_LINUX_RELEASE_COMPILE_DEFS};>
)

SET(PHYSX_JNIBINDINGS_LINK_FLAGS " ")
SET(PHYSX_JNIBINDINGS_LINK_FLAGS_DEBUG " ")
SET(PHYSX_JNIBINDINGS_LINK_FLAGS_CHECKED " ")
SET(PHYSX_JNIBINDINGS_LINK_FLAGS_PROFILE " ")
SET(PHYSX_JNIBINDINGS_LINK_FLAGS_RELEASE " ")


SET(PHYSX_JNIBINDINGS_HEADERS

)
SOURCE_GROUP(include FILES ${PHYSX_JNIBINDINGS_HEADERS})

SET(PHYSX_JNIBINDINGS_SOURCE
	${PHYSX_JNIBINDINGS_SOURCE_DIR}/common/vehicle/Base.cpp
	${PHYSX_JNIBINDINGS_SOURCE_DIR}/common/vehicle/DirectDrivetrain.cpp
	${PHYSX_JNIBINDINGS_SOURCE_DIR}/common/vehicle/EngineDrivetrain.cpp
	${PHYSX_JNIBINDINGS_SOURCE_DIR}/common/vehicle/PhysXIntegration.cpp

	${PHYSX_JNIBINDINGS_SOURCE_DIR}/jni/PhysXJni.cpp
)
SOURCE_GROUP(src FILES ${PHYSX_JNIBINDINGS_SOURCE})

ADD_LIBRARY(PhysXJniBindings ${PHYSX_JNIBINDINGS_LIBTYPE}
	${PHYSX_JNIBINDINGS_SOURCE}
	${PHYSX_JNIBINDINGS_HEADERS}
)

TARGET_INCLUDE_DIRECTORIES(PhysXJniBindings
	PRIVATE ${JNI_INCLUDE_DIRS}
	PRIVATE ${PHYSX_JNIBINDINGS_PLATFORM_INCLUDES}

	PRIVATE ${PHYSX_ROOT_DIR}/include
	PRIVATE ${PHYSX_ROOT_DIR}/pvdruntime/include
	PRIVATE ${PHYSX_SOURCE_DIR}/pvd/include
)

TARGET_LINK_LIBRARIES(PhysXJniBindings 
	PUBLIC PhysXCommon
	PUBLIC PhysXFoundation
	PUBLIC PhysXExtensions
	PUBLIC PhysXCooking
	PUBLIC PhysXVehicle2
	PUBLIC PhysXTask
	PUBLIC PhysXCharacterKinematic
	PUBLIC PhysXPvdSDK
)

TARGET_COMPILE_DEFINITIONS(PhysXJniBindings 
	PRIVATE ${PHYSX_JNIBINDINGS_COMPILE_DEFS}
)

SET_TARGET_PROPERTIES(PhysXJniBindings PROPERTIES
	OUTPUT_NAME PhysXJniBindings
	LINK_FLAGS ${PHYSX_JNIBINDINGS_LINK_FLAGS}
	LINK_FLAGS_DEBUG ${PHYSX_JNIBINDINGS_LINK_FLAGS_DEBUG}
	LINK_FLAGS_CHECKED ${PHYSX_JNIBINDINGS_LINK_FLAGS_CHECKED}
	LINK_FLAGS_PROFILE ${PHYSX_JNIBINDINGS_LINK_FLAGS_PROFILE}
	LINK_FLAGS_RELEASE ${PHYSX_JNIBINDINGS_LINK_FLAGS_RELEASE}
)
	

IF(NV_USE_GAMEWORKS_OUTPUT_DIRS AND PHYSX_JNIBINDINGS_LIBTYPE STREQUAL "STATIC")	
	SET_TARGET_PROPERTIES(PhysXJniBindings PROPERTIES 
		ARCHIVE_OUTPUT_NAME_DEBUG "PhysXJniBindings_static"
		ARCHIVE_OUTPUT_NAME_CHECKED "PhysXJniBindings_static"
		ARCHIVE_OUTPUT_NAME_PROFILE "PhysXJniBindings_static"
		ARCHIVE_OUTPUT_NAME_RELEASE "PhysXJniBindings_static"
	)
ENDIF()

# enable -fPIC so we can link static libs with the editor
SET_TARGET_PROPERTIES(PhysXJniBindings PROPERTIES POSITION_INDEPENDENT_CODE TRUE)
